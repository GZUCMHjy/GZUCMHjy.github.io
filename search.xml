<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法笔记一</title>
      <link href="/2022/08/17/suan-fa-bi-ji-yi/"/>
      <url>/2022/08/17/suan-fa-bi-ji-yi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h1><ul><li><h2 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h2><ol><li>概念：二分查找又称折半查找，通过不断改变两端边界的值，从而在一维数据中快速查找目标值。</li><li>使用前提：在具有<strong>单调</strong>(递增/递减)的一维数据(数组)。</li><li>思想：二分的过程就是不断微分的过程。</li></ol></li><li><h2 id="边界问题"><a href="#边界问题" class="headerlink" title="边界问题"></a>边界问题</h2><strong>细节</strong>：数组下标都是从零开始，故存进数组的数据也是从下标零开始。</li></ul><ol><li><p>搜索区间<strong>左闭右闭</strong>[l,r]—&gt;寻找<strong>一个数</strong></p><p> l=0;<br> r=数组长度-1;</p><table><thead><tr><th align="center">l</th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center">r</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">1</td><td align="center">2</td><td align="center">3</td><td align="center">4</td><td align="center">5</td><td align="center">…</td><td align="center">n-1</td></tr></tbody></table></li></ol>  <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">void BinarySearch(int arr[],int target){    int l=0;//初始化搜索边界    int r=n-1;//数组长度减一//下标为n-1未数组越界        while(l&lt;=r){//终止条件是(l==r+1)表示搜索区间是[r+1,r],此区间为开(不存在)            int mid=l+(r-l)/2;//防止数据溢出            if(a[mid]&gt;target){                r=mid-1;//[l,r]--&gt;[l,mid-1]            }            else if(a[mid]&lt;target){                l=mid+1;//[l,r]--&gt;[mid+1,r]            }else{                return l;//return r也可以            }        }        return -1;//搜索区间为空,即找不到target则return-1}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><ol><li>问题1：为什么while的循环条件是l &lt;= r,而不是l &lt; r?<br>解: 因为前者的终止条件是l==r+1,搜索区间为[r+1,r]，此区间为空;后者终止条件是l==r,搜索区间为[r,r]，此区间不为空。当只有区间为空时，才可以退出while循环，表示未找到target值。</li><li>问题2：为什么称这搜索区间为左闭右闭?<br>解：因为初始的左右下标边界都是可以取的，r=0;l=n-1(未越界)。</li><li>问题3：为什么r=mid-1,l=mid+1?<br>解：因为已经检测到mid不是我们要找的target，故将mid除去。mid将初始化的搜索区间拆分为[l,mid-1],[mid+1,r];</li></ol></li><li><p>搜索区间<strong>左闭右开</strong>[l,r)—&gt;寻找<strong>左右侧边界</strong></p>  <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">void left_bound(int arr[],int target){    int l=0;    int r=n;    while(l&lt;r){//注意！！！        int mid=l+(r-l)/2;        if(a[mid]&gt;target){            r=mid;//注意！！！        }else if(a[mid]&lt;target){            l=mid+1;        }else{            r=mid;//改变右侧边界r，向左靠拢        }    }return l;//return r也可以}void right_bound(int arr[],int target){    int l=0;    int r=n;    while(l&lt;r){//注意！！！        int mid=l+(r-l)/2;        if(a[mid]&gt;target){            r=mid;//注意！！！        }else if(a[mid]&lt;target){            l=mid+1;        }else{            l=mid+1;//改变右侧边界l，向右靠拢        }    }return l-1;//return r-1也可以}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><ol><li>问题1：为什么while的循环条件是l &lt; r,而不是l &lt;= r?<br> 解：初始化的搜索边界l=0；r=n;此时的右边界r=n是已经数组下标越界了，故将while循环的终止条件设置为l==r,即搜索区间为[r,r)，很明显此区间为空。</li><li>问题2.为什么l=mid+1，r=mid，而不是l=mid+1,r=mid-1?<br> 解：还是根据搜索区间置空的原理解释。检测mid不符合我们要找的target，所以将mid去掉，即mid将搜索区间分成两部分[l,mid),[mid+1,r)。</li><li>问题3：当target值为小于数组所有值或大于所有值或者介于端点值但不存在，那返回什么？<br> 解：问得好！当target小于任何数时，return 0；当target大于任何数时，return n；当target介于两端点值时，返回第一个大于target值的下标。</li><li>问题4：要想实现如果找不到target值就返回-1，怎么改？ <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">    void left_bound(int arr[],int target){    int l=0;    int r=n;    while(l&lt;r){//注意！！！        int mid=l+(r-l)/2;        if(a[mid]&gt;target){            r=mid;//注意！！！        }else if(a[mid]&lt;target){            l=mid+1;        }else{            r=mid;//改变右侧边界r，向左靠拢        }    }    if(l==n)return -1;//当target大于任何数组的所有数时，返回-1，也就是说右侧边界r无法向左进行靠拢。//换成if(r==n)return -1也可以return a[l]==target?l:-1;//换成return a[r]==target?r:-1也可以}void right_bound(int arr[],int target){    int l=0;    int r=n;    while(l&lt;r){//注意！！！        int mid=l+(r-l)/2;        if(a[mid]&gt;target){            r=mid;//注意！！！        }else if(a[mid]&lt;target){            l=mid+1;        }else{            l=mid+1;//改变左侧边界l，向右靠拢        }    }    if(l==0)return -1;//当target小于任何数组的所有数时，返回-1，也就是说左侧边界无法向右靠拢。//换成r==0也可以return a[l-1]==target?(l-1):-1;//换成a[r-1]=target?(r-1):-1也可以}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li></ol></li></ol><ul><li><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>理解清楚while循环退出的条件(终止条件)</li><li>理解清楚搜索区间为空的作用</li><li>理解上面两条，你就明白如何确定二分的边界了！</li></ol></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法</title>
      <link href="/2022/08/14/dai-ma-kuai-yan-shi/first/"/>
      <url>/2022/08/14/dai-ma-kuai-yan-shi/first/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><h2 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h2><h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><h4 id="何名杨"><a href="#何名杨" class="headerlink" title="何名杨"></a>何名杨</h4><blockquote><p>“引用语法&gt;”</p><blockquote><p>二级应用</p></blockquote></blockquote><p>谈恋爱：<br>1.物色女孩<br>2.相处聊天<br>3.准备惊喜<br>4.最后表白冲击</p><p>无序列表：</p><ul><li>我不道哇</li><li>我记到鸟</li></ul><ul><li>也可以无序标记</li><li>好像跟-的不一样</li></ul><p>日计划:</p><ul><li><input checked="" disabled="" type="checkbox"> 刷洛谷题</li><li><input checked="" disabled="" type="checkbox"> 后端知识(javaweb java jdbc)</li><li><input checked="" disabled="" type="checkbox"> 前端三件套(javascript css html)</li><li><input checked="" disabled="" type="checkbox"> 练琴 英语背单词</li></ul><p>代码块</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hello</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"what the hell?!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表格</p><table><thead><tr><th align="center">学生</th><th align="center">数学成绩</th></tr></thead><tbody><tr><td align="center">张三</td><td align="center">93</td></tr><tr><td align="center">李四</td><td align="center">69</td></tr><tr><td align="center">脚注：</td><td align="center"></td></tr></tbody></table><p>hjy<a href="21%E5%8C%BB%E5%B7%A5%E5%AD%A6%E7%94%9F">^学生</a></p><pre class="line-numbers language-none"><code class="language-none">浅浅地学Markdown语法*斜体***加粗**H~2~OX^2==这是一段高亮文字====这是高亮文字吗==//vscode不支持高亮文字标记==what the hell==语法展示:* 可以吗<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>语法展示：</p><ul><li>又可以了(要得有空格)</li><li>呦吼</li></ul><p><em>斜体</em><br><del>HELLO WORLD</del>(删除)<br><strong>何名杨</strong></p><p><strong>欢迎学习Markdown语法</strong>(一对双星)<br><strong>欢迎学习Markdown语法</strong>(下划线)加粗</p><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/2022/08/12/dai-ma-kuai-yan-shi/yan-shi/"/>
      <url>/2022/08/12/dai-ma-kuai-yan-shi/yan-shi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h1><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">function a(){    console.log("hello world")}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/08/12/hello-world/"/>
      <url>/2022/08/12/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
